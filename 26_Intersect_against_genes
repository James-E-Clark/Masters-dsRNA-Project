#Here I used the gencode.vM23.annotation.gtf annotation file to find genes producing dsRNA and siRNA.
#The first step was to download gencode.vM23.annotation.gtf from https://www.gencodegenes.org/mouse/

#I then removed the top row which begins '##' This was done with grep -v
grep -v "##" gencode.vM23.annotation.gtf > grep.gtf

#If transcript id isnt present, this line of code makes sure there is something there and not just a blank space. Not always needed but makes the file more complete
awk '{ if ($0 ~ "transcript_id") print $0; else print $0" transcript_id \"\";"; }' grep.gtf > grep.gtf

#Using gtf2bed to create a bedfile from the gtf. This is a BEDOPS programme (https://bedops.readthedocs.io/en/latest/content/reference/file-management/conversion/gtf2bed.html)
gencode.vM23.annotation.gtf | gtf2bed - > mousegenes.bed

#Here, bedtools intersect is being used to find loci shared between the reference (mousegenes.bed) and the dsRNA transcriptome (R_all.merged.bed). The -wa option means that the number of reads aligning to each gene is quantified. https://bedtools.readthedocs.io/en/latest/content/tools/intersect.html
bedtools intersect -a mousegenes.bed -b R_all.merged.bed -wa > dsRNA_genes.bed

#Awk was used to find everything classed as a gene. This was in part because genes are of interest but also to reduce file size and improve useability 
awk '$8 == "gene"' dsRNA_genes.bed > gene.bed

#Awk was used again to find and exclude each gene with 0 reads aligning, again to improve usability and reduce file size 
awk '”$11>"0"' dsRNA_genes.bed > gene.bed

#This was done for both the dsRNA and siRNA transcriptomes. Files can be renamed as text files or .xls files to be opened in Excel if needed. 
